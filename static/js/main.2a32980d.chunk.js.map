{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Container/Container.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css","Components/Container/Container.js","Components/Layout/Layout.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","protoTypes","PropTypes","node","isRequired","Layout","protoType","FeedbackOptions","options","onLeaveFeedback","map","id","label","type","btn","onClick","string","func","Statistics","good","neutral","bad","total","positivePercentage","feedback","item","number","Section","title","section","Notification","message","App","state","setLeaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","buttons","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a32980d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__x_rWu\",\"item\":\"Statistics_item__INSCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3XIEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2jFCu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Notification_item__3XqNu\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.protoTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container/Container';\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Container>{children}</Container>\r\n  </>\r\n);\r\n\r\nLayout.protoType = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(({ id, label }) => (\r\n        <button\r\n          type=\"button\"\r\n          key={id}\r\n          className={styles.btn}\r\n          onClick={() => onLeaveFeedback(label)}\r\n        >\r\n          {label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.protoTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={styles.feedback}>\r\n      <span className={styles.item}>good: {good}</span>\r\n      <span className={styles.item}>neutral: {neutral}</span>\r\n      <span className={styles.item}>bad: {bad}</span>\r\n      <span className={styles.item}>Total: {total}</span>\r\n      <span className={styles.item}>\r\n        Positive feedback: {positivePercentage}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.protoType = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.modules.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={styles.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.protoType = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.item}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\n\nimport Layout from './Components/Layout';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nimport buttons from './buttons.json';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  setLeaveFeedback = label => {\n    this.setState(prevState => ({\n      [label]: prevState[label] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = neutral + good + bad;\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = neutral + good + bad;\n\n    return Math.round((good * 100) / total) + '%';\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h1>Kафе Expresso</h1>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={buttons}\n            onLeaveFeedback={this.setLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}